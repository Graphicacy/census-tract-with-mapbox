{"version":3,"sources":["assets/images/Graphicacy_logo.svg","constants.js","App/Map/Tooltip/index.js","App/Map/index.js","App/Legend/index.js","App/Header/index.js","App/index.js","index.js"],"names":["module","exports","COLORS","DEFAULT_VIEWPORT","latitude","longitude","zoom","bearing","pitch","DOLLAR_FORMATTER","format","SI_DOLLAR_FORMATTER","DATA_PROPERTY","LAYER_PROPERTIES","clipped","style","name","source","bins","LEGEND_COLORS","schemeBlues","map","d","i","FILL_COLOR_PAINT","concat","merge","useStyles","makeStyles","theme","tooltip","position","margin","fontSize","zIndex","pointerEvents","width","props","tooltipWidth","height","tooltipHeight","boxShadow","textAlign","borderRadius","header","background","color","padding","Tooltip","activeFeature","x","y","classes","className","left","top","properties","Map","useState","state","setState","mapRef","useRef","mapboxRef","useEffect","current","offsetWidth","offsetHeight","prevState","ref","viewport","onMouseLeave","getMap","removeFeatureState","sourceLayer","onMouseMove","event","feature","srcEvent","offsetX","offsetY","point","center","queryRenderedFeatures","layers","err","setFeatureState","id","hover","mapStyle","onViewportChange","mapboxApiAccessToken","process","type","url","filter","source-layer","paint","legend","display","flexDirection","marginBlockStart","marginBlockEnd","paddingBottom","paddingRight","innerContainer","justifyContent","legendItem","Legend","idx","value","key","length","backgroundColor","href","target","rel","builtBy","alignItems","builtByContainer","marginLeft","marginTop","Header","src","graphicacyLogo","alt","app","overflowY","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7be9910.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Graphicacy_logo.a21d2b02.svg\";","import { format } from 'd3-format';\nimport { schemeBlues } from 'd3-scale-chromatic';\nimport { merge } from 'd3-array';\n\nexport const COLORS = {\n  darkGray: '#343131',\n  white: '#fff',\n  black: '#000',\n};\n\nexport const DEFAULT_VIEWPORT = {\n  latitude: 41.5096879,\n  longitude: -73.0447974,\n  zoom: 8,\n  bearing: 0,\n  pitch: 0,\n};\n\nexport const DOLLAR_FORMATTER = format('$,.0f');\nexport const SI_DOLLAR_FORMATTER = format('$.3s');\n\nexport const SELECTED_LAYER = 'clipped';\nexport const DATA_PROPERTY = 'total_est';\nexport const DATA_LABEL = 'Median Household Income';\n\nexport const LAYER_PROPERTIES = {\n  clipped: {\n    style: 'mapbox://styles/graphicacy/ckhs3vpu21oqb19nyrsvzaq8n',\n    name: 'tractsclippedbystatewithdata',\n    source: 'mapbox://graphicacy.d4j3v1uy',\n  },\n};\n\n// Color the census tracts based on the 7 Jenks bins from CartoDB SQL function\nconst bins = [36836, 52390, 69315, 91857, 120714, 166635, 250002];\nexport const LEGEND_COLORS = schemeBlues[7].map((d, i) => [d, bins[i]]);\nconst FILL_COLOR = ['step', ['get', DATA_PROPERTY]].concat(merge(LEGEND_COLORS)).concat('#fff');\nexport const FILL_COLOR_PAINT = {\n  'fill-color': FILL_COLOR,\n  'fill-opacity': 1,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { COLORS, DATA_LABEL, DATA_PROPERTY, DOLLAR_FORMATTER } from '../../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  tooltip: {\n    position: 'absolute',\n    margin: '8px',\n    fontSize: '10px',\n    zIndex: '9',\n    pointerEvents: 'none',\n    width: (props) => props.tooltipWidth,\n    height: (props) => props.tooltipHeight,\n    boxShadow: '0 3px 6px #00000029',\n    textAlign: 'center',\n    borderRadius: '8px',\n  },\n  header: {\n    width: '100%',\n    height: '100%',\n    background: `${COLORS.white} 0 0 no-repeat padding-box`,\n    color: COLORS.darkGray,\n    padding: '10px',\n  },\n}));\n\nconst Tooltip = ({ activeFeature, x, y, width, height }) => {\n  const tooltipWidth = 300;\n  const tooltipHeight = 100;\n  const buffer = 10;\n  const classes = useStyles({ tooltipWidth, tooltipHeight });\n\n  if (!activeFeature) return null;\n\n  // If the tooltip is going over the edge of the right side of the screen\n  if (tooltipWidth + x > width - buffer) {\n    x -= tooltipWidth;\n  }\n\n  // If the tooltip is going over the edge of the bottom side of the screen\n  if (tooltipHeight + y > height - buffer) {\n    y -= tooltipHeight;\n  }\n\n  return (\n    <div className={classes.tooltip} style={{ left: x, top: y }}>\n      <div className={classes.header}>\n        <h2>{activeFeature.properties.name}</h2>\n        <h2>{`${DATA_LABEL}: ${DOLLAR_FORMATTER(activeFeature.properties[DATA_PROPERTY])}`}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import * as React from 'react';\nimport ReactMapGL, { Layer, Source } from 'react-map-gl';\nimport { useEffect, useRef, useState } from 'react';\nimport Tooltip from './Tooltip';\nimport { DATA_PROPERTY, LAYER_PROPERTIES, FILL_COLOR_PAINT, SELECTED_LAYER } from '../../constants';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  map: {\n    width: '100%',\n    height: '100%',\n  },\n}));\n\nconst Map = (props) => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    width: 500,\n    height: 300,\n    activeFeature: null,\n    x: 0,\n    y: 0,\n  });\n  const mapRef = useRef(null);\n  const mapboxRef = useRef(null);\n\n  useEffect(() => {\n    const { offsetWidth, offsetHeight } = mapRef.current;\n    setState((prevState) => ({\n      ...prevState,\n      width: offsetWidth,\n      height: offsetHeight,\n    }));\n  }, []);\n\n  const _onViewportChange = (viewport) =>\n    props.setState((prevState) => {\n      return {\n        ...prevState,\n        viewport,\n      };\n    });\n\n  return (\n    <div className={classes.map} ref={mapRef}>\n      <ReactMapGL\n        {...props.state.viewport}\n        ref={mapboxRef}\n        width=\"100%\"\n        height=\"100%\"\n        onMouseLeave={() => {\n          const map = mapboxRef.current.getMap();\n          map.removeFeatureState({\n            source: LAYER_PROPERTIES[SELECTED_LAYER].name,\n            sourceLayer: LAYER_PROPERTIES[SELECTED_LAYER].name,\n          });\n        }}\n        onMouseMove={(event) => {\n          const {\n            srcEvent: { offsetX, offsetY },\n          } = event;\n          const point = [event.center.x, event.center.y];\n          const map = mapboxRef.current.getMap();\n\n          let feature;\n          try {\n            feature = map.queryRenderedFeatures(point, { layers: ['fill_layer'] })[0];\n          } catch (err) {\n            return;\n          }\n\n          if (feature) {\n            if (state.activeFeature) {\n              map.removeFeatureState({\n                source: LAYER_PROPERTIES[SELECTED_LAYER].name,\n                sourceLayer: LAYER_PROPERTIES[SELECTED_LAYER].name,\n              });\n            }\n            map.setFeatureState(\n              {\n                source: LAYER_PROPERTIES[SELECTED_LAYER].name,\n                sourceLayer: LAYER_PROPERTIES[SELECTED_LAYER].name,\n                id: feature.id,\n              },\n              {\n                hover: true,\n              },\n            );\n          }\n\n          setState((prevState) => ({\n            ...prevState,\n            activeFeature: feature,\n            x: offsetX,\n            y: offsetY,\n          }));\n        }}\n        mapStyle={LAYER_PROPERTIES[SELECTED_LAYER].style}\n        onViewportChange={_onViewportChange}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      >\n        <Source id={LAYER_PROPERTIES[SELECTED_LAYER].name} type=\"vector\" url={LAYER_PROPERTIES[SELECTED_LAYER].source} />\n        <Layer\n          type=\"fill\"\n          id=\"fill_layer\"\n          filter={['has', DATA_PROPERTY]}\n          source={LAYER_PROPERTIES[SELECTED_LAYER].name}\n          source-layer={LAYER_PROPERTIES[SELECTED_LAYER].name}\n          paint={FILL_COLOR_PAINT}\n        />\n        <Layer\n          type=\"line\"\n          source={LAYER_PROPERTIES[SELECTED_LAYER].name}\n          source-layer={LAYER_PROPERTIES[SELECTED_LAYER].name}\n          paint={{\n            'line-width': ['case', ['boolean', ['feature-state', 'hover'], false], 3, 0.5],\n            'line-color': ['case', ['boolean', ['feature-state', 'hover'], false], '#000', '#969090'],\n            'line-opacity': 0.5,\n          }}\n        />\n      </ReactMapGL>\n      <Tooltip {...state} />\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport { COLORS, LEGEND_COLORS, SI_DOLLAR_FORMATTER } from '../../constants';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  legend: {\n    width: (props) => props.width,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '10px',\n    '& h4': {\n      marginBlockStart: 0,\n      marginBlockEnd: '.5rem',\n    },\n    '& :not(:last-child)': {\n      paddingBottom: '.25rem',\n    },\n    paddingRight: '15px',\n    color: COLORS.darkGray,\n  },\n  innerContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n  },\n  legendItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& .block': {\n      width: '100%',\n      height: '15px',\n    },\n    textAlign: 'end',\n  },\n}));\n\nconst Legend = () => {\n  const width = 600;\n  const classes = useStyles({ width });\n\n  return (\n    <div className={classes.legend}>\n      <h4>The ACS-based estimate of Median Household Income from 2013-2017</h4>\n      <div className={classes.innerContainer}>\n        {LEGEND_COLORS.map(([color, value], idx) => {\n          return (\n            <div className={classes.legendItem} key={`legend-item-for-${color}`} style={{ width: width / LEGEND_COLORS.length }}>\n              <div className=\"block\" style={{ backgroundColor: color }} />\n              <div>{`${!idx ? '<' : ''}${SI_DOLLAR_FORMATTER(value)}`}</div>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        Source:{' '}\n        <a\n          href=\"http://data.diversitydatakids.org/dataset/19013_1_d-median-household-income--dollar--by-race-ethnicity/resource/c5334c27-3cf0-439b-b8b0-5ff7eb632b57\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          diversitydatakids.org\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Legend;\n","import React from 'react';\nimport graphicacyLogo from '../../assets/images/Graphicacy_logo.svg';\nimport Legend from '../Legend';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  builtBy: {\n    display: 'flex',\n    height: '100px',\n    position: 'absolute',\n    zIndex: '999',\n    backgroundColor: '#fff',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    '& h3': {\n      fontSize: '24px',\n    },\n  },\n  builtByContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: '15px',\n    '& img': {\n      marginLeft: '6px',\n      marginTop: '10px',\n    },\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.builtBy}>\n      <div className={classes.builtByContainer}>\n        <div>\n          <h3>BUILT BY</h3>\n        </div>\n        <div>\n          <a href=\"https://graphicacy.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={graphicacyLogo} alt=\"Large G branding for Graphicacy - a data visualization and design firm.\" />\n          </a>\n        </div>\n      </div>\n      <Legend />\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport Map from './Map';\nimport { DEFAULT_VIEWPORT } from '../constants';\nimport Header from './Header';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100vw',\n    height: '100vh',\n    margin: '0 auto',\n    overflowY: 'hidden',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    viewport: DEFAULT_VIEWPORT,\n  });\n\n  return (\n    <div className={classes.app}>\n      <Header />\n      <Map state={state} setState={setState} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}